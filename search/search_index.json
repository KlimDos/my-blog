{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog Focus Areas","text":"<p>Welcome to my blog! I have over 15 years of experience in the IT industry, with a passion for solving complex problems and supporting a wide range of IT projects. I specialize in DevOps, cloud-native solutions, and IT architecture, ensuring cost-efficient solutions across startups and enterprise environments.</p> <p>On this blog, I\u2019ll share my experiences and thoughts on:</p> <ul> <li>Infrastructure as Code (IaC): Automating and scaling infrastructure with tools like Terraform, Ansible, and GitOps.</li> <li>Kubernetes &amp; Orchestration: Best practices and tips for managing clusters with EKS, Rancher, and more.</li> <li>DevOps and CI/CD Pipelines: Leveraging Jenkins, ArgoCD, and CloudFormation for streamlined deployments.</li> <li>Cloud Platforms &amp; Observability: Insights into AWS services, CloudWatch, and monitoring stacks like ELK and Prometheus.</li> <li>Backend and Frontend Synergy: How to build resilient, scalable applications using Java, React, and more.</li> </ul>"},{"location":"#languages-i-use","title":"Languages I Use","text":"<ul> <li>Python, Bash, Go, JavaScript: Daily coding languages</li> <li>Java &amp; Go: Backend work</li> </ul>"},{"location":"#stay-connected","title":"Stay Connected","text":"<p>Feel free to reach out to me on GitHub or my personal website at alimov.pro. Let's connect and share knowledge in the tech world!</p>"},{"location":"about-me/","title":"About me","text":""},{"location":"about-me/#personal-summary","title":"Personal Summary","text":"<p>I aim to share insights, tips, and hands-on experiences in:</p> <ul> <li>Cloud Operations (AWS, Kubernetes, etc.)</li> <li>Infrastructure as Code (Terraform, Ansible, GitOps)</li> <li>Continuous Integration &amp; Delivery (Jenkins, ArgoCD)</li> <li>Observability (Prometheus, Grafana, ELK/EFK)</li> <li>Frontend &amp; Backend technologies</li> </ul> <p>Feel free to explore, learn, and connect through my posts on the latest trends in tech and system reliability.</p>"},{"location":"about-me/#education-and-certifications","title":"Education and Certifications","text":"<ul> <li>M.Sc. in Theoretical Physics, Immanuel Kant Baltic Federal University (2004-2009)</li> <li>Network Administrator, Immanuel Kant Baltic Federal University (2008-2009)</li> <li>Language ISE II, ECM: European College Management, Ireland (2015-2016)</li> </ul>"},{"location":"about-me/#work-experience","title":"Work Experience","text":""},{"location":"about-me/#site-reliability-engineer-lead-at-wiley-jan-2019-present","title":"Site Reliability Engineer Lead at Wiley (Jan 2019 - Present)","text":"<p>Handling the orchestration, monitoring, and scaling of micro-services that impact millions of users. My core areas of expertise include:</p> <ul> <li>IaC &amp; CD: GitOps, Terraform, ArgoCD, Jenkins</li> <li>Logging &amp; Monitoring: CloudWatch, Prometheus, Grafana, ELK</li> <li>Orchestration: Kubernetes, EKS, Rancher, SWARM</li> <li>Frontend &amp; Backend Development: React, Node.js, Java, Spring Boot, MongoDB, DynamoDB</li> <li>Languages &amp; Tools: Python, Bash, JavaScript, Go, Java</li> </ul> <p>I work on delivering robust and efficient infrastructure solutions while staying engaged with open-source and DevOps best practices.</p>"},{"location":"about-me/#technical-skills-overview","title":"Technical Skills Overview","text":"<ul> <li>IaC &amp; CD: GitOps, Jenkins, Terraform, Ansible</li> <li>Logging &amp; Monitoring: ELK/EFK, CloudWatch, Prometheus, Dynatrace</li> <li>Orchestration: Kubernetes, EKS, SWARM, AWS ECS, Docker</li> <li>Frontend &amp; Backend: React, Vue, Node.js, Java (Spring Boot), PostgreSQL, MongoDB, DynamoDB</li> <li>Other Tools: HashiCorp Vault, Packer, LinkerD, MS Teams API</li> <li>Languages: Python, JavaScript (Node.js/React), Go, Bash, YAML/HCL</li> </ul>"},{"location":"howto/","title":"Spinning Up AWS EKS Nodes with Custom Kubelet Settings","text":""},{"location":"howto/#problem","title":"Problem","text":"<p>My application generates a large volume of logs written to <code>stdout</code>. However, I noticed missing log entries when analyzing them in Kibana.</p>"},{"location":"howto/#root-cause","title":"Root Cause","text":"<ol> <li>By default, the <code>stdout</code> and <code>stderr</code> output from Kubernetes pods is stored on the host node in the <code>/var/log/pods/</code> directory.</li> <li>Kubernetes rotates these log files when they reach 10MB:</li> <li>The original <code>0.log</code> file is renamed to <code>0.log.&lt;timestamp&gt;</code>.</li> <li>The older <code>0.log.&lt;timestamp&gt;</code> files are compressed into <code>0.log.&lt;timestamp&gt;.gz</code>.</li> <li>Fluent Bit (used as a log collector) reads only the active <code>0.log</code> file via a symlink. </li> </ol> <p>When logs are generated rapidly (&gt;3MB per second), Fluent Bit may not process them completely before rotation occurs. This results in missing logs in the analytical interface, such as Kibana.</p>"},{"location":"howto/#solution","title":"Solution","text":""},{"location":"howto/#understanding-the-logging-pipeline","title":"Understanding the Logging Pipeline","text":"<ul> <li>Default Runtime: EKS uses ContainerD as the default container runtime.</li> <li>Managed by Kubelet: The <code>kubelet</code> is responsible for configuring ContainerD behavior, including log management.</li> <li>Customization Options: You can adjust the kubelet\u2019s log rotation settings via <code>kubelet-config.json</code> or launch arguments.</li> </ul>"},{"location":"howto/#customizing-kubelet-settings","title":"Customizing Kubelet Settings","text":"<p>To resolve the issue, you can increase the maximum log file size by customizing kubelet arguments. For EKS, this is achieved by creating an AWS Launch Template with customized User Data.</p>"},{"location":"howto/#step-by-step-implementation-with-terraform","title":"Step-by-Step Implementation with Terraform","text":""},{"location":"howto/#use-a-template-file-for-generating-the-user-data","title":"Use a template file for generating the user data:","text":"<pre><code>data \"template_file\" \"launch_template_userdata\" {\n  template = file(\"templates/userdata.sh.tpl\")\n}\n</code></pre>"},{"location":"howto/#user-data-template","title":"User Data Template","text":"<pre><code>MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"//\"\n\n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n\n#!/bin/bash\necho \"Start of UserData\"\nset -ex\n/etc/eks/bootstrap.sh ccp-k8s-sandbox \\\n    --kubelet-extra-args '--max-log-size=100M'\n\necho \"End of UserData\"\n\n--//--\n\n</code></pre>"},{"location":"howto/#define-the-launch-template-in-terraform","title":"Define the launch template in Terraform:","text":"<pre><code>resource \"aws_launch_template\" \"worker\" {\n  for_each = toset(var.launch_template_names[\"custom-kubelet-settings\"])\n  key_name = var.key_name\n\n  network_interfaces {\n    security_groups = [\"sg1\", \"sg2\"]\n  }\n\n  metadata_options {\n    http_endpoint               = \"enabled\"\n    http_tokens                 = \"required\"\n    http_put_response_hop_limit = 2\n  }\n\n  block_device_mappings {\n    device_name = \"/dev/xvda\"\n    ebs {\n      volume_size = var.volume_size\n    }\n  }\n\n  user_data = base64encode(\n    data.template_file.launch_template_userdata.rendered,\n  )\n\n  tag_specifications {\n    resource_type = \"instance\"\n    tags = merge(local.cluster_resource_tags, { extraTag = \"example\" })\n  }\n\n  tag_specifications {\n    resource_type = \"volume\"\n    tags = merge(local.cluster_resource_tags, { extraTag = \"example\" })\n  }\n\n  tags = merge(local.cluster_resource_tags, { extraTag = \"example\" })\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\n</code></pre>"},{"location":"howto/#after-deploying-the-eks-node-monitor-the-bootstrap-process-by-checking-the-logs","title":"After deploying the EKS node, monitor the bootstrap process by checking the logs:","text":"<pre><code>cat /var/log/cloud-init-output.log\n\n</code></pre>"},{"location":"howto/#conclusion","title":"Conclusion","text":"<p>By customizing kubelet settings via an AWS Launch Template, you can resolve log rotation issues in EKS, ensuring that Fluent Bit processes all logs effectively and no data is lost in Kibana.</p>"},{"location":"postmortem-template/","title":"Postmortem: [Incident Title]","text":""},{"location":"postmortem-template/#1-incident-summary","title":"1. Incident Summary","text":"<ul> <li>Date/Time: [Start Date and Time] - [End Date and Time] (Timezone)</li> <li>Duration: [Duration of the Incident]</li> <li>Impact: [Brief summary of the impact, e.g., \"API requests failed for 90% of users\"]</li> <li>Services Affected: [List of affected services or systems]</li> <li>Root Cause: [Brief explanation of the root cause]</li> </ul>"},{"location":"postmortem-template/#2-timeline-of-events","title":"2. Timeline of Events","text":"Time (Timezone) Event Description HH:MM [Event 1: Detection of the issue] HH:MM [Event 2: Actions taken] HH:MM [Event 3: Identification of root cause] HH:MM [Event 4: Resolution applied]"},{"location":"postmortem-template/#3-root-cause-analysis","title":"3. Root Cause Analysis","text":"<ul> <li>Primary Cause: [Detailed technical explanation of what caused the issue]</li> <li>Contributing Factors: </li> <li>[Factor 1]</li> <li>[Factor 2]</li> </ul>"},{"location":"postmortem-template/#4-impact-analysis","title":"4. Impact Analysis","text":"<ul> <li>Users Affected: [Number/percentage of affected users]</li> <li>Business Impact: [e.g., revenue loss, SLA breach, customer complaints]</li> <li>Technical Impact: [e.g., downtime, performance degradation]</li> </ul>"},{"location":"postmortem-template/#5-mitigation-and-recovery","title":"5. Mitigation and Recovery","text":"<ul> <li>Steps Taken: [Describe the actions taken to mitigate and resolve the incident]</li> <li>Short-Term Fixes: [What was done to immediately restore service]</li> </ul>"},{"location":"postmortem-template/#6-action-items","title":"6. Action Items","text":"Task Description Owner Priority Deadline [Action item 1: Add monitoring] [Owner 1] [High/Low] [YYYY-MM-DD] [Action item 2: Improve alert thresholds] [Owner 2] [Medium] [YYYY-MM-DD]"},{"location":"postmortem-template/#7-lessons-learned","title":"7. Lessons Learned","text":"<ul> <li>What Went Well:</li> <li>[Point 1]</li> <li>[Point 2]</li> <li>What Didn't Go Well:</li> <li>[Point 1]</li> <li>[Point 2]</li> <li>Improvements for the Future:</li> <li>[Point 1]</li> <li>[Point 2]</li> </ul>"},{"location":"postmortem-template/#8-supporting-data","title":"8. Supporting Data","text":"<ul> <li>Logs: [Link to relevant logs or attach snippets]</li> <li>Metrics: [Include charts, graphs, or screenshots showing key metrics during the incident]</li> <li>Diagrams: [Include architecture or flow diagrams if necessary]</li> </ul>"},{"location":"postmortem-template/#9-communication-and-review","title":"9. Communication and Review","text":"<ul> <li>Stakeholders Notified: [List of stakeholders and communication methods used]</li> <li>Postmortem Review Meeting: [Scheduled date and time for review]</li> </ul>"}]}